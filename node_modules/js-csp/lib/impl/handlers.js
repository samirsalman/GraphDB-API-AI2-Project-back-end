'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AltHandler = exports.FnHandler = undefined;

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _noop = require('lodash/noop');

var _noop2 = _interopRequireDefault(_noop);

var _boxes = require('./boxes');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var FnHandler = exports.FnHandler = function () {
  function FnHandler(blockable, func) {
    (0, _classCallCheck3.default)(this, FnHandler);

    this.blockable = blockable;
    this.func = func || _noop2.default;
  }

  (0, _createClass3.default)(FnHandler, [{
    key: 'isActive',
    value: function isActive() {
      // eslint-disable-line
      return true;
    }
  }, {
    key: 'isBlockable',
    value: function isBlockable() {
      return this.blockable;
    }
  }, {
    key: 'commit',
    value: function commit() {
      return this.func;
    }
  }]);
  return FnHandler;
}();

var AltHandler = exports.AltHandler = function () {
  function AltHandler(flag, func) {
    (0, _classCallCheck3.default)(this, AltHandler);

    this.flag = flag;
    this.func = func;
  }

  (0, _createClass3.default)(AltHandler, [{
    key: 'isActive',
    value: function isActive() {
      return this.flag.value;
    }
  }, {
    key: 'isBlockable',
    value: function isBlockable() {
      // eslint-disable-line
      return true;
    }
  }, {
    key: 'commit',
    value: function commit() {
      this.flag.value = false;
      return this.func;
    }
  }]);
  return AltHandler;
}();