'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.promiseChan = exports.chan = exports.go = exports.spawn = exports.NO_VALUE = exports.takeAsync = exports.putAsync = exports.alts = exports.sleep = exports.poll = exports.offer = exports.take = exports.put = exports.DEFAULT = exports.timeout = exports.CLOSED = exports.buffers = exports.operations = undefined;

var _channels = require('./impl/channels');

Object.defineProperty(exports, 'CLOSED', {
  enumerable: true,
  get: function get() {
    return _channels.CLOSED;
  }
});

var _timers = require('./impl/timers');

Object.defineProperty(exports, 'timeout', {
  enumerable: true,
  get: function get() {
    return _timers.timeout;
  }
});

var _results = require('./impl/results');

Object.defineProperty(exports, 'DEFAULT', {
  enumerable: true,
  get: function get() {
    return _results.DEFAULT;
  }
});

var _process = require('./impl/process');

Object.defineProperty(exports, 'put', {
  enumerable: true,
  get: function get() {
    return _process.put;
  }
});
Object.defineProperty(exports, 'take', {
  enumerable: true,
  get: function get() {
    return _process.take;
  }
});
Object.defineProperty(exports, 'offer', {
  enumerable: true,
  get: function get() {
    return _process.offer;
  }
});
Object.defineProperty(exports, 'poll', {
  enumerable: true,
  get: function get() {
    return _process.poll;
  }
});
Object.defineProperty(exports, 'sleep', {
  enumerable: true,
  get: function get() {
    return _process.sleep;
  }
});
Object.defineProperty(exports, 'alts', {
  enumerable: true,
  get: function get() {
    return _process.alts;
  }
});
Object.defineProperty(exports, 'putAsync', {
  enumerable: true,
  get: function get() {
    return _process.putThenCallback;
  }
});
Object.defineProperty(exports, 'takeAsync', {
  enumerable: true,
  get: function get() {
    return _process.takeThenCallback;
  }
});
Object.defineProperty(exports, 'NO_VALUE', {
  enumerable: true,
  get: function get() {
    return _process.NO_VALUE;
  }
});

var _csp = require('./csp.core');

Object.defineProperty(exports, 'spawn', {
  enumerable: true,
  get: function get() {
    return _csp.spawn;
  }
});
Object.defineProperty(exports, 'go', {
  enumerable: true,
  get: function get() {
    return _csp.go;
  }
});
Object.defineProperty(exports, 'chan', {
  enumerable: true,
  get: function get() {
    return _csp.chan;
  }
});
Object.defineProperty(exports, 'promiseChan', {
  enumerable: true,
  get: function get() {
    return _csp.promiseChan;
  }
});

var _buffers = require('./impl/buffers');

var _csp2 = require('./csp.operations');

var operations = exports.operations = {
  mapFrom: _csp2.mapFrom,
  mapInto: _csp2.mapInto,
  filterFrom: _csp2.filterFrom,
  filterInto: _csp2.filterInto,
  removeFrom: _csp2.removeFrom,
  removeInto: _csp2.removeInto,
  mapcatFrom: _csp2.mapcatFrom,
  mapcatInto: _csp2.mapcatInto,
  pipe: _csp2.pipe,
  split: _csp2.split,
  reduce: _csp2.reduce,
  onto: _csp2.onto,
  fromColl: _csp2.fromColl,
  map: _csp2.map,
  merge: _csp2.merge,
  into: _csp2.into,
  unique: _csp2.unique,
  partitionBy: _csp2.partitionBy,
  partition: _csp2.partition,
  mult: _csp2.mult,
  mix: _csp2.mix,
  pub: _csp2.pub,
  pipeline: _csp2.pipeline,
  pipelineAsync: _csp2.pipelineAsync,
  take: _csp2.take
};
var buffers = exports.buffers = { fixed: _buffers.fixed, dropping: _buffers.dropping, sliding: _buffers.sliding, promise: _buffers.promise };