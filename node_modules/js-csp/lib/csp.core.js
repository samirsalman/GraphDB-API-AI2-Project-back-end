'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _toConsumableArray2 = require('babel-runtime/helpers/toConsumableArray');

var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

exports.spawn = spawn;
exports.go = go;
exports.chan = chan;
exports.promiseChan = promiseChan;

var _buffers = require('./impl/buffers');

var _process = require('./impl/process');

var _channels = require('./impl/channels');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function spawn(gen, creator) {
  var ch = (0, _channels.chan)((0, _buffers.fixed)(1));
  var process = new _process.Process(gen, function (value) {
    if (value === _channels.CLOSED) {
      ch.close();
    } else {
      (0, _process.putThenCallback)(ch, value, function () {
        return ch.close();
      });
    }
  }, creator);

  process.run();
  return ch;
}

function go(f) {
  var args = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];

  return spawn(f.apply(undefined, (0, _toConsumableArray3.default)(args)), f);
}

function chan(bufferOrNumber, xform, exHandler) {
  if (typeof bufferOrNumber === 'number') {
    return (0, _channels.chan)(bufferOrNumber === 0 ? null : (0, _buffers.fixed)(bufferOrNumber), xform, exHandler);
  }

  return (0, _channels.chan)(bufferOrNumber, xform, exHandler);
}

function promiseChan(xform, exHandler) {
  return (0, _channels.chan)((0, _buffers.promise)(), xform, exHandler);
}